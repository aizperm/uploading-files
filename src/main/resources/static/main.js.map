{"version":3,"sources":["./src/environments/environment.ts","./src/app/image-view/image-view.component.ts","./src/app/image-view/image-view.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/file-chooser/file-chooser.component.ts","./src/app/file-chooser/file-chooser.component.html","./src/app/service/AppService.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SafeUrl} from '@angular/platform-browser';\nimport { AppFile } from '../app-model/AppModel';\n\n@Component({\n  selector: 'app-image-view',\n  templateUrl: './image-view.component.html',\n  styleUrls: ['./image-view.component.scss']\n})\nexport class ImageViewComponent implements OnInit {\n\n  public file: AppFile;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  @Input()\n  set imgFile(appFile: AppFile){\n    this.file = appFile;\n  }\n}\n","<div class=\"body\">\n  <img [src]=\"file.src\" height=\"100%\" width=\"100%\">\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { AppService } from './service/AppService';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { AppFile } from './app-model/AppModel';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'upload-client';\n  appService: AppService;\n  public urls: Array<AppFile>;\n  private sanitizer: DomSanitizer;\n  private files: Array<File> = [];\n\n  constructor(appService: AppService, sanitizer: DomSanitizer) {\n    this.appService = appService;\n    this.sanitizer = sanitizer;\n  }\n\n  ngOnInit(): void {\n    console.log('Init application');\n    const files = this.appService.files();\n    files.subscribe(r => {\n      console.log('files', r);\n      if (!!r.files) {\n        this.urls = r.files.map(file => {\n          const safeUrl = this.sanitizer.bypassSecurityTrustUrl(file.url);\n          return {\n            fileName: file.filename,\n            local: false,\n            src: safeUrl\n          } as AppFile;\n        });\n      }\n    });\n  }\n\n  public onSelectedFiles(files: Array<File>): void {\n    this.files = files;\n    this.urls = files.map(file => {\n      const safeUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file))\n      return {\n        fileName: file.name,\n        local: true,\n        localFile: file,\n        src: safeUrl\n      } as AppFile;\n    });\n  }\n\n  public isSignDisabled(): boolean {\n    return !this.urls || this.urls.length === 0;\n  }\n\n  public onSignClicked(): void {\n    this.files.forEach(file => {\n      const uploaded = this.appService.uploadFile(file);\n      uploaded.subscribe(an => {\n        console.log('uploaded', an);\n      });\n    });\n  }\n}\n","<mat-grid-list cols=\"1\" rowHeight=\"50px\">\r\n  <mat-grid-tile>\r\n    <mat-label class=\"title\">Подписывание картинок</mat-label>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <app-file-chooser title=\"Добавьте файлы\" (selectedFiles)=\"onSelectedFiles($event)\"></app-file-chooser>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <button mat-raised-button [disabled]=\"isSignDisabled()\" (click)=\"onSignClicked()\">\r\n      <mat-icon>spellcheck</mat-icon>\r\n      Подписать\r\n    </button>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<div class='preview-images'>\r\n  <div *ngFor=\"let url of urls\" class='preview-image'>\r\n    <app-image-view [imgFile]=\"url\"></app-image-view>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ImageViewComponent } from './image-view/image-view.component';\nimport { AppService } from './service/AppService';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommonModule } from '@angular/common';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FileChooserComponent } from './file-chooser/file-chooser.component';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImageViewComponent,\n    FileChooserComponent\n  ],\n  imports: [\n    BrowserModule, HttpClientModule, CommonModule, BrowserAnimationsModule,\n    MatButtonModule, MatGridListModule, MatFormFieldModule, MatIconModule\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, ElementRef, Input, OnInit, Output, QueryList, ViewChild, ViewChildren, EventEmitter} from '@angular/core';\nimport {Renderer2} from '@angular/core';\nimport {element} from 'protractor';\n\nexport const FILE_INPUT_NAME = 'file-chooser-input';\n\n@Component({\n  selector: 'app-file-chooser',\n  templateUrl: './file-chooser.component.html',\n  styleUrls: ['./file-chooser.component.scss']\n})\nexport class FileChooserComponent implements OnInit {\n\n  @Input()\n  public title: string;\n  private files: Array<File> = [];\n  @Output() selectedFiles = new EventEmitter<Array<File>>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  public onClick(): void {\n    const fileUpload = document.getElementById('file-chooser-input') as HTMLInputElement;\n    fileUpload.onchange = () => {\n      // tslint:disable-next-line:prefer-for-of\n      for (let index = 0; index < fileUpload.files.length; index++) {\n        const file = fileUpload.files[index];\n        this.files.push(file);\n      }\n      this.filesSelected();\n    };\n    fileUpload.click();\n  }\n\n  private filesSelected(): void {\n    const selectedFilesEvent = this.files;\n    this.selectedFiles.emit(selectedFilesEvent);\n  }\n}\n","<div>\n<button mat-raised-button (click)=\"onClick()\">\n  <mat-icon>add_circle</mat-icon>\n  {{title}}\n</button>\n  <input type=\"file\" multiple id=\"file-chooser-input\" style=\"display: none\" accept=\"image/*\">\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { AppFiles } from '../app-model/AppModel';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AppService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    public files(): Observable<AppFiles> {\r\n        const result = this.http.get('/api/files') as Observable<AppFiles>;\r\n        return result;\r\n    }\r\n\r\n  public uploadFile(file: File): Observable<any> {\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n    const result = this.http.post('/api/file', data);\r\n    return result;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}